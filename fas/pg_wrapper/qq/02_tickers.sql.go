// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.17.2
// source: 02_tickers.sql

package qq

import (
	"context"
)

const getAvaibleTickers = `-- name: GetAvaibleTickers :many
SELECT exchanges.name as exchange, tickers.name as ticker, tickers.ticker_id FROM tickers
JOIN exchanges on exchanges.exchange_id = tickers.exchange_id
`

type GetAvaibleTickersRow struct {
	Exchange string `json:"exchange"`
	Ticker   string `json:"ticker"`
	TickerID int32  `json:"ticker_id"`
}

func (q *Queries) GetAvaibleTickers(ctx context.Context) ([]GetAvaibleTickersRow, error) {
	rows, err := q.db.Query(ctx, getAvaibleTickers)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []GetAvaibleTickersRow
	for rows.Next() {
		var i GetAvaibleTickersRow
		if err := rows.Scan(&i.Exchange, &i.Ticker, &i.TickerID); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
